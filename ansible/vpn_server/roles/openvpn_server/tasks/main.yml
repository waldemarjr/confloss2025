---
- name: Get config file IP forward
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/waldemarjr/confloss2025/refs/heads/main/vpn_server/99-ipfwd.conf"
    dest: "/etc/sysctl.d/99-ipfwd.conf"
    owner: root
    group: root
    mode: '0644'

- name: Enable and start the Sysctl Service
  ansible.builtin.systemd_service:
    name: systemd-sysctl.service
    enabled: true
    state: restarted

- name: Install OpenVPN
  ansible.builtin.apt:
    name: openvpn
    state: present
    update_cache: true

- name: Get config file OpenVPN
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/waldemarjr/confloss2025/refs/heads/main/vpn_server/vpn_server.conf"
    dest: "/etc/openvpn/vpn_server.conf"
    owner: root
    group: root
    mode: '0644'

- name: Create directory keys for OpenVPN
  ansible.builtin.file:
    path: /etc/openvpn/keys
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Generate static key OpenVPN
  ansible.builtin.shell: if [ ! -e /etc/openvpn/keys/static.key ]; then openvpn --genkey > /etc/openvpn/keys/static.key; fi
  register: output
  changed_when: output.rc != 0

- name: Get static key file from VPN Server
  ansible.builtin.fetch:
    src: /etc/openvpn/keys/static.key
    dest: /home/waldemar/confloss2025/client_vpn/openvpnKeys/static.key
    flat: true

- name: Enable and start the OpenVPN service
  ansible.builtin.systemd_service:
    name: openvpn@vpn_server
    enabled: true
    state: started

- name: Create rc-local.service unit file
  ansible.builtin.copy:
    dest: /etc/systemd/system/rc-local.service
    content: |
          [Unit]
          Description=/etc/rc.local Compatibility
          ConditionPathExists=/etc/rc.local

          [Service]
          Type=forking
          ExecStart=/etc/rc.local start
          TimeoutSec=0
          StandardOutput=tty
          RemainAfterExit=yes
          SysVStartPriority=99

          [Install]
          WantedBy=multi-user.target
  become: true


- name: Create /etc/rc.local script
  ansible.builtin.copy:
    dest: /etc/rc.local
    content: |
          #!/bin/bash
          iptables -t nat -I POSTROUTING -d {{ network.public_network_cidr }} -j MASQUERADE
          exit 0
    mode: '0755'
  become: true


- name: Enable and start rc-local.service
  ansible.builtin.systemd:
    name: rc-local.service
    enabled: true
    state: started
  become: true
